<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DwAACw8BkvkDpQAABH9JREFUaEPtmEmrVUcQx1+cZxwTHD6AbuP4BVRE3YQg2RifGwcQdRUn1I3DVknU
        jfIeiisTCPoBfEElCycignPiROK8iHFG4v+Hp6Xo1+d2nXePPhe34M8993R1DX2qq6q7ra1FrRVorUAd
        K9BHQmYJG4VfhIvCE+F1AZ5597OwQZgpMKfXaZIs2CncFf6viDvi3yFM7A0vxkjpPuFVRaNTTr6UjD3C
        6E/lyHdS9Chh+N96t19YLHwt4GT/AmP1O1X4Xjgg/JOY/1DvFn1MJ/oVqx6v4nG9ny/0raAcWQuEroQj
        P+kd47XSYEk7Fim7qv9zatAyTzKuRbKP6j86ayFWIza+U++G1iL9vZBhwsGEE7V8CTarDZvNNRoei9oS
        6fqxWV1s2KrGs5qbhLPCfwXO6JcawViOYie+zU0oGyeL2GxD2ORoihhuRU7bBbipsck5IRo/ZGQ80PMo
        x5xuLDZ02LC5mB8hnj8bGB8cuSGe4RmD+FLXjazKoUSFtUVqrmMFCJFg5L96Xip8VYBn3oXx9Q55ZKfA
        T7Gb4JjzgYX2IEwmz3vonJmzLDFhhRlnT3joNzNnu2cCPBQk29tQpDz0zCgbl5jwpRlnc3uIYhcWkr3l
        agDpKsMk2gNvLv4YDqD7nrFnhsdrG8v0Nl6yIbQ8MaknIYSYDuPAOo8x9PPhC9CYeYk+327idv0n24B4
        E7sMKRQvMXKPeIzh4BEMoav0EmmUFJk7F3jSqNU5zci84DHmsZlAMatCFKm/GjhBnfAUMquThBAWhZY7
        Szb/D8hyd2eg4BFOp4WnBXgm9+eKYUrdQOMA9SBLzTqQVVCRobIDzYRQRdtc7JVDyG5ijoFl9IUGVgqX
        hbfmM+c2cRhnDnNJucgqo+lGtmsT2zTKGbaMMN5rbI4vVTeC3najx5VGvYXsSo0OXGqwUJ1Gzw+eoOPS
        KawYtwdlrYQNG2+7YfVzY2HDKWUbcu8bPmpClmiYuHQKwsuaueeGpycH8CFmPrJStNDwuJs5BHFjFhzo
        KhF+3vCsyS5Ld4a1Zj59VIpOGJ5tVXRw3UfRCE5wuIhptRl/o2f6G0/hgwde5gT5qxLy+fJh/IWeKx1o
        kMd1XxDAvU18IKfAnDI88PKZ+XqzhfHCoAIo5x0HpfjMfFLvkGUJXbav2p1wMPuKPojeIzjBvU1MFBl7
        asqly3i8S/O5dozpsNHLJu7RoR6h3FVapVx5xESmYA/YbJFzhEMKc1LZa2uk85vsUmcYuKvMOYEIYpus
        sVf4XSAFE7uAZ94RlhwTy/ZKbPyuZo1nPqvEXaV1gnsbzyWVVz+ybNig61ehyoVxQ13k+dgJ7m1S2clr
        dOAj28QHIYzvSW1pqJsvwQVTHN9sYsKiSjWGl3CzeT7IJePUtvIpj7irTG1YNmaHsESg5JNdiHXAM+/a
        hc4G85vesN7PT1rja9hil8s8ZeNsclZ9pFd5nXwUKG7MbidCK+cQBY32gILX60QDyKUT5156dg4enOw4
        ngKe/yjGaCM4pLhu2Xrds5YBrRX4zFfgHaDBLo6Qs81mAAAAAElFTkSuQmCC
</value>
  </data>
</root>