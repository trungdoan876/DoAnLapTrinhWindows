<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAABGRJREFUaEPtmUloU1EUhqstjijSmrZpkmZhXRhFXYnDQlAXziAo4sKBCipVQRCK
        VUFFNw7UoRVdqBVFxZVSB0TEAaoizlpbN9IKilJdOM/Td8K58oxpQ967iS0mcLjv3Xfv///n3PkmKyvz
        y0QgE4H/OgKdA4HAcL/fv6CoqGgNaTW2HltaWFg4gbRHu4xOQUHBQMTVILoF+9maUeYDdgonJ7ULRxAS
        ROwB7LtDtDzfx05jBxFci10T8TGO1Ulr/TNHEDQKQc+NKN5v8TyP1siPJ0q6D9+nYMewH1KPvC+kZWl3
        AuJZ2CcV/4x0JiI6OYWEw+FuwWAwEJsvZcgfRp3rDuer0+aERB77rOQ3pBsZcvKG8m0n6WOHuMp44nCi
        O2UOO8qVp9wJ7fOm29w0s0pubm7vOGPBDOaNbQjrBMY+deIbM9X4lDohg9J0GxN53kM6aKOCEXSHdDk2
        Qr4lElRSUtKVOpcV91EkEumSqI6r7wzOQZCY2Ub6fFZeXl4vI15nmVKyOydLQDD664CWIKRmUEOwXyN8
        24jkfY/mfZSxkaxwZ3nq79ZWaPaC01rdbMBfKIFEOUsWL96/ad4ir6T0/wFmQNMig73i/VEf4JEK/j0/
        P79APhKxzZrXyGu2DULwHmmLVtjA+42BWNnbSP+sN5nkPVSylbbIwNyrmEdsYUZxAF6rDpxR4Bwz6Gju
        MbbIwFynPBdtYUZxAK1S4EPyrvP+VxkDxcXFfltk4C1WngZbmKYFNmjTnjDADLrRNqOvLb1Sea7admCJ
        Rua6VeAYMDh2KM8xqzxyGDHzPdNnT6vgDjDGwFXl2WKVQzde7zU6U62CKxhB8oFvVvqx1jnkJBWveTW/
        ibSvF1KwZf8kU/Ub2R95wYpbF+DJSvBD9vOmEHlN2NdQKNTPLanuqVoUf5tbnIT1IKjTPnrNREki70W8
        TtNm8L4zK31CMW4KIH6EWcBIa9xgxNYBc65GXrrPKhuYbWJAUmYIcUKOgjluSVlH5pijKWktOElvxV1x
        i3CHE+d5TnhwcRLJVEydrQ6Me7K6uxLjthJOlCMgup3mWc4DlUyF4bbwOOj3oZwsinIRYE5wtSKeugvJ
        OyuHG7eakq4nZ1hIo1tgh8mdUBVCV2DzsWWy9cYuyGzlKPeWPNnJRruNYxF7wvNJyjWQHoUjkrSwZCrI
        GVbHRXOMI63d0L2l3PbY2YY8udF4GYshrUurTExGk+uyEA2BsAIRcl1ySaN4hfQ4+ZtIx7V1aKfMOe2S
        d0lLsUZ9/5Q2J1x7T0XEmlaMHlullch70GGcQKjcp0rXk3GU1+Gc0CvH6ECnO90x+6sO1RL09RlmtZcx
        5PP5CqUl5NJYW0Za6DVlir1015TWxYnpDifumxtvaQnyn2o3W5NSEV7BEToNM5fI9Y7rHFlPpIvt8sqR
        8voInWqc0MhfNOsEC9zslAuwQSDzP+JfxSxwp9O28bPhBOLlBnw1JueGv/5MscGRwchEIBOBdhKBX57g
        nlB+/AqKAAAAAElFTkSuQmCC
</value>
  </data>
</root>